/*CONSTRAINTS*/
/*INFO: 
1.If we are not giving 
name for constraint oracle DB
will automatically generate a name

2.If we are not giving name for 
constraint no need to mention 
CONSTRAINT keyword*/

/*1.NOT NULL CONSTRAINT*/
/*1.1. While creating table itself*/
CREATE TABLE KMR_PEOPLE(
ID NUMBER CONSTRAINT KMR_TABLE_ID_NN NOT NULL,
NAME VARCHAR2(100) CONSTRAINT KMR_TABLE_NAME_NN NOT NULL,
STREET VARCHAR2(100),
CITY VARCHAR2(100));

SELECT * FROM KMR_PEOPLE;
INSERT INTO KMR_PEOPLE (ID, NAME, STREET, CITY)
VALUES ('1','KMR','Street1','City1');

UPDATE KMR_PEOPLE
SET DOOR_NO = 10;

/*1.2.After creating table*/
ALTER TABLE KMR_PEOPLE
MODIFY DOOR_NO NUMBER CONSTRAINT KMR_PEOPLE_DOOR_NO_NN NOT NULL;
    
/*2.Unique Constraint*/
CREATE TABLE KMR_TEST(
NAME VARCHAR2(20),
ID NUMBER CONSTRAINT ID_NN NOT NULL CONSTRAINT ID_UQ UNIQUE);

SELECT * FROM KMR_TEST;

INSERT INTO KMR_TEST (NAME)
VALUES ('KMR');

/*2.1 Unique Constraint on table level*/
/*INFO : CONSTRAINT NAME SHOULD BE PROPER*/
CREATE TABLE KMR_NUMBER(
ID VARCHAR2(10),
TEST_1 NUMBER,
TEST_2 NUMBER,
CONSTRAINT TEST_UNIQ UNIQUE (TEST_1, TEST_2));

/*2.2 Unique constraint on alter table*/
/*INFO : CONSTRAINT NAME SHOULD BE UNIQUE AMONG DB*/
CREATE TABLE KMR_ALTER(
ID NUMBER CONSTRAINT ALTER_ID_NN NOT NULL CONSTRAINT ALTER_ID_UNQ UNIQUE,
FIRST_NAME VARCHAR2(10),
LAST_NAME VARCHAR2(10));

ALTER TABLE KMR_ALTER
ADD CONSTRAINT ALTER_2_UNQ UNIQUE (FIRST_NAME,LAST_NAME);

SELECT * FROM KMR_ALTER;

INSERT INTO KMR_ALTER 
VALUES('1','KMR','KMR');
INSERT INTO KMR_ALTER 
VALUES('2','KMR','KM');

/*3. Primary Key constraint*/
CREATE TABLE KMR_LIST(
ID NUMBER,
NAME VARCHAR2(10),
CONSTRAINT ID_PK PRIMARY KEY (ID));

/*3.1 Alter table PK constraint*/
CREATE TABLE KMR_ALTER(
ID NUMBER,
NAME VARCHAR2(10),
CITY VARCHAR2(10));

ALTER TABLE KMR_ALTER
ADD CONSTRAINT ALTER_ID_PK PRIMARY KEY(ID);

/*4.Check constraint - Table Creation*/
CREATE TABLE KMR_EMP(
ID NUMBER CONSTRAINT KMR_EMP_ID_PK PRIMARY KEY,
NAME VARCHAR2(10) CONSTRAINT KMR_EMP_NAME_NN NOT NULL,
AGE NUMBER CONSTRAINT KMR_EMP_AGE_CHECK CHECK(AGE > 10),
GENDER CHAR(1));

INSERT INTO KMR_EMP
VALUES (1,'KMR',11,'M');

/*Check constraint - Alter table*/
ALTER TABLE KMR_EMP 
ADD CONSTRAINT KMR_EMP_GENDER_CHECK CHECK(GENDER IN ('M','F','O'));


/*3. Primary Key constraint*/
CREATE TABLE KMR_LIST(
ID NUMBER,
NAME VARCHAR2(10),
CONSTRAINT ID_PK PRIMARY KEY (ID));

/*3.1 Alter table PK constraint*/
CREATE TABLE KMR_ALTER(
ID NUMBER,
NAME VARCHAR2(10),
CITY VARCHAR2(10));

ALTER TABLE KMR_ALTER
ADD CONSTRAINT ALTER_ID_PK PRIMARY KEY(ID);

/*4.Check constraint - Table Creation*/
CREATE TABLE KMR_EMP(
ID NUMBER CONSTRAINT KMR_EMP_ID_PK PRIMARY KEY,
NAME VARCHAR2(10) CONSTRAINT KMR_EMP_NAME_NN NOT NULL,
AGE NUMBER CONSTRAINT KMR_EMP_AGE_CHECK CHECK(AGE > 10),
GENDER CHAR(1));

INSERT INTO KMR_EMP
VALUES (1,'KMR',11,'M');

/*Check constraint - Alter table*/
ALTER TABLE KMR_EMP 
ADD CONSTRAINT KMR_EMP_GENDER_CHECK CHECK(GENDER IN ('M','F','O'));

/*fetching data from 2 table without forign key*/
CREATE TABLE PRODUCT_NAME(
ID VARCHAR2(5),
NAME VARCHAR2(10) CONSTRAINT PRODUCT_NAME_NN NOT NULL);

CREATE TABLE PRODUCT_PRICE(
ID NUMBER,
PROD_ID VARCHAR(5),--PRODUCT_NAME.NAME%TYPE,
PRICE FLOAT)

INSERT INTO PRODUCT_NAME
VALUES (1,'NOTE BOOK');
INSERT INTO PRODUCT_NAME
VALUES (2,'PEN');
INSERT INTO PRODUCT_NAME
VALUES (3,'WATCH');
INSERT INTO PRODUCT_NAME
VALUES (4,'LAPTOP');

INSERT INTO PRODUCT_PRICE
VALUES (1, 1, 20.00);
INSERT INTO PRODUCT_PRICE
VALUES (2, 2, 10.00);
INSERT INTO PRODUCT_PRICE
VALUES (3, 3, 200.00);
INSERT INTO PRODUCT_PRICE
VALUES (4, 10, 100.00);


SELECT NAME.NAME, PRICE.PRICE
FROM
    PRODUCT_NAME NAME
    FULL OUTER JOIN
    PRODUCT_PRICE PRICE
ON (NAME.ID = PRICE.PROD_ID);

/*5 Foriegn key constraint*/
ALTER TABLE PRODUCT_NAME
ADD CONSTRAINT PRODUCT_NAME_ID_PK PRIMARY KEY(ID);

UPDATE PRODUCT_PRICE
SET PROD_ID = '3'
WHERE ID = '4';

ALTER TABLE PRODUCT_PRICE
ADD CONSTRAINT PRODUCT_PRICE_PROD_ID_FK FOREIGN KEY(PROD_ID)
REFERENCES PRODUCT_NAME(ID) ON DELETE CASCADE --SET NULL;

SELECT * FROM PRODUCT_NAME

DELETE PRODUCT_NAME
WHERE ID = 3;

SELECT * FROM PRODUCT_PRICE